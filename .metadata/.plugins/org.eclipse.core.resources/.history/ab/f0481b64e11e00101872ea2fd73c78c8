package hcl.tech.config;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.authentication.AbstractAuthenticationToken;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.web.SecurityFilterChain;

import ch.qos.logback.core.pattern.Converter;
import io.jsonwebtoken.Jwt;

@Configuration
public class SecurityConfig {

	@Bean
	public SecurityFilterChain security(HttpSecurity http) throws Exception {
	    http.csrf().disable()
	        .authorizeHttpRequests(auth -> auth.anyRequest().authenticated())
	        .oauth2ResourceServer(oauth -> oauth.jwt()
	            .jwtAuthenticationConverter(new Converter<Jwt, AbstractAuthenticationToken>() {
	                @Override
	                public AbstractAuthenticationToken convert(Jwt jwt) {
	                    return null; // placeholder logic
	                }
	            }));
	    return http.build();
	}
}
